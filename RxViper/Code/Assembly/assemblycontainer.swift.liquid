//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Swinject
import SwinjectStoryboard

final class {{ module_info.name }}AssemblyContainer: Assembly {

    func assemble(container: Container) {
        container.register({{ module_info.name }}InteractorProtocol.self) { resolver in
            let interactor = {{ module_info.name }}Interactor()
            return interactor
        }

        container.register({{ module_info.name }}RouterProtocol.self) { (resolver, viewController: {{ module_info.name }}ViewController) in
            let router = {{ module_info.name }}Router()
            return router
        }

        container.register({{ module_info.name }}Presenter.self) { (resolver, viewController: {{ module_info.name }}ViewController) in
            let presenter = {{ module_info.name }}Presenter()
            presenter.view = viewController
            presenter.interactor = resolver.resolve({{ module_info.name }}InteractorProtocol.self)
            presenter.router = resolver.resolve({{ module_info.name }}RouterProtocol.self, argument: viewController)
            return presenter
        }

        container.storyboardInitCompleted({{ module_info.name }}ViewController.self) { resolver, viewController in
            let presenter = resolver.resolve({{ module_info.name }}Presenter.self, argument: viewController)!
            viewController.setPresenter(presenter)
        }
    }
}